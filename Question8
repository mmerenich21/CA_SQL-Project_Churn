WITH months as
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT id, first_day as month,
CASE
  WHEN segment = '87'
 		AND (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) THEN 1
  ELSE 0
 END as is_active_87,
CASE
  WHEN segment = '30'
 		AND (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) THEN 1
  ELSE 0
 END as is_active_30,
CASE 
  WHEN segment = '87'
 		AND subscription_end BETWEEN first_day AND last_day 	THEN 1
  ELSE 0
 END as is_canceled_87,
CASE 
  WHEN segment = '30'
 		AND subscription_end BETWEEN first_day AND last_day 	THEN 1
  ELSE 0
 END as is_canceled_30
FROM cross_join),
status_aggregate as
 (select month, sum(is_active_87) as active_87, sum(is_canceled_87) as cancelled_87, sum(is_active_30) as active_30, sum(is_canceled_30) as cancelled_30
from status
group by 1)
SELECT month, round(1.0 * status_aggregate.cancelled_87 / status_aggregate.active_87, 4) as churn_rate_87, round(1.0 * status_aggregate.cancelled_30 / status_aggregate.active_30, 4) as churn_rate_30
FROM status_aggregate;
